/****************************************************************************
**
** Namespace AcroPDFLib generated by dumpcpp from type library
** C:\Program Files (x86)\Common Files\Adobe\Acrobat\ActiveX\AcroPDF.dll
**
****************************************************************************/

#ifndef QAX_DUMPCPP_ACROPDFLIB_H
#define QAX_DUMPCPP_ACROPDFLIB_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef ACROPDFLIB_EXPORT
#define ACROPDFLIB_EXPORT
#endif

#include <qaxobject.h>
#include <qaxwidget.h>
#include <qdatetime.h>
#include <qpixmap.h>

struct IDispatch;


// Referenced namespace

namespace AcroPDFLib {


// skipping event interface _IAcroAXDocShimEvents

class ACROPDFLIB_EXPORT IAcroAXDocShim : public QAxObject
{
public:
    IAcroAXDocShim(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property messageHandler

    property messageHandler

    */
    inline QVariant messageHandler() const; //Returns the value of messageHandler
    inline void setMessageHandler(const QVariant& value); //Sets the value of the messageHandler property

    /*
    Property src

    property src

    */
    inline QString src() const; //Returns the value of src
    inline void setSrc(const QString& value); //Sets the value of the src property

    /*
    Method GetVersions

    method GetVersions

    */
    inline QVariant GetVersions();

    /*
    Method LoadFile

    method LoadFile

    */
    inline bool LoadFile(const QString& fileName);

    /*
    Method Print

    method Print

    */
    inline void Print();

    /*
    Method execCommand

    method execCommand

    */
    inline void execCommand(const QVariant& strArray);

    /*
    Method goBackwardStack

    method goBackwardStack

    */
    inline void goBackwardStack();

    /*
    Method goForwardStack

    method goForwardStack

    */
    inline void goForwardStack();

    /*
    Method gotoFirstPage

    method gotoFirstPage

    */
    inline void gotoFirstPage();

    /*
    Method gotoLastPage

    method gotoLastPage

    */
    inline void gotoLastPage();

    /*
    Method gotoNextPage

    method gotoNextPage

    */
    inline void gotoNextPage();

    /*
    Method gotoPreviousPage

    method gotoPreviousPage

    */
    inline void gotoPreviousPage();

    /*
    Method postMessage

    method postMesage

    */
    inline void postMessage(const QVariant& strArray);

    /*
    Method printAll

    method printAll

    */
    inline void printAll();

    /*
    Method printAllFit

    method printAllFit

    */
    inline void printAllFit(bool shrinkToFit);

    /*
    Method printPages

    method printPages

    */
    inline void printPages(int from, int to);

    /*
    Method printPagesFit

    method printPagesFit

    */
    inline void printPagesFit(int from, int to, bool shrinkToFit);

    /*
    Method printWithDialog

    method printWithDialog

    */
    inline void printWithDialog();

    /*
    Method setCurrentHighlight

    method setCurrentHighlight

    */
    inline void setCurrentHighlight(int a, int b, int c, int d);

    /*
    Method setCurrentHightlight

    method setCurrentHightlight

    */
    inline void setCurrentHightlight(int a, int b, int c, int d);

    /*
    Method setCurrentPage

    method setCurrentPage

    */
    inline void setCurrentPage(int n);

    /*
    Method setLayoutMode

    method setLayoutMode

    */
    inline void setLayoutMode(const QString& layoutMode);

    /*
    Method setNamedDest

    method setNamedDest

    */
    inline void setNamedDest(const QString& namedDest);

    /*
    Method setPageMode

    method setPageMode

    */
    inline void setPageMode(const QString& pageMode);

    /*
    Method setShowScrollbars

    method setShowScrollbars

    */
    inline void setShowScrollbars(bool On);

    /*
    Method setShowToolbar

    method setShowToolbar

    */
    inline void setShowToolbar(bool On);

    /*
    Method setView

    method setView

    */
    inline void setView(const QString& viewMode);

    /*
    Method setViewRect

    method setViewRect

    */
    inline void setViewRect(double left, double top, double width, double height);

    /*
    Method setViewScroll

    method setViewScroll

    */
    inline void setViewScroll(const QString& viewMode, double offset);

    /*
    Method setZoom

    method setZoom

    */
    inline void setZoom(double percent);

    /*
    Method setZoomScroll

    method setZoomScroll

    */
    inline void setZoomScroll(double percent, double left, double top);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class ACROPDFLIB_EXPORT ISPOpenDocuments : public QAxObject
{
public:
    ISPOpenDocuments(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Method CheckinDocument

    method CheckinDocument

    */
    inline bool CheckinDocument(const QString& bstrDocumentLocation, int CheckinType, const QString& CheckinComment);

    /*
    Method CheckinDocument

    method CheckinDocument

    */
    inline bool CheckinDocument(const QString& bstrDocumentLocation, int CheckinType, const QString& CheckinComment, bool bKeepCheckout);

    /*
    Method CheckoutDocumentPrompt

    method CheckoutDocumentPrompt

    */
    inline bool CheckoutDocumentPrompt(const QString& bstrDocumentLocationRaw, bool fEditAfterCheckout);

    /*
    Method CheckoutDocumentPrompt

    method CheckoutDocumentPrompt

    */
    inline bool CheckoutDocumentPrompt(const QString& bstrDocumentLocationRaw, bool fEditAfterCheckout, const QVariant& varProgID);

    /*
    Method CreateNewDocument

    method CreateNewDocument

    */
    inline bool CreateNewDocument(const QString& bstrTemplateLocation, const QString& bstrDefaultSaveLocation);

    /*
    Method CreateNewDocument2

    method CreateNewDocument2

    */
    inline bool CreateNewDocument2(IDispatch* pDisp, const QString& bstrTemplateLocation, const QString& bstrDefaultSaveLocation);

    /*
    Method DiscardLocalCheckout

    method DiscardLocalCheckout

    */
    inline bool DiscardLocalCheckout(const QString& bstrDocumentLocationRaw);

    /*
    Method EditDocument

    method EditDocument

    */
    inline bool EditDocument(const QString& bstrDocumentLocation);

    /*
    Method EditDocument

    method EditDocument

    */
    inline bool EditDocument(const QString& bstrDocumentLocation, const QVariant& varProgID);

    /*
    Method EditDocument2

    method EditDocument2

    */
    inline bool EditDocument2(IDispatch* pDisp, const QString& bstrDocumentLocation);

    /*
    Method EditDocument2

    method EditDocument2

    */
    inline bool EditDocument2(IDispatch* pDisp, const QString& bstrDocumentLocation, const QVariant& varProgID);

    /*
    Method EditDocument3

    method EditDocument3

    */
    inline bool EditDocument3(IDispatch* pDisp, const QString& bstrDocumentLocation, bool fUseLocalCopy);

    /*
    Method EditDocument3

    method EditDocument3

    */
    inline bool EditDocument3(IDispatch* pDisp, const QString& bstrDocumentLocation, bool fUseLocalCopy, const QVariant& varProgID);

    /*
    Method NewBlogPost

    method NewBlogPost

    */
    inline void NewBlogPost(const QString& bstrProviderId, const QString& bstrBlogUrl, const QString& bstrBlogName);

    /*
    Method PromptedOnLastOpen

    method PromptedOnLastOpen

    */
    inline bool PromptedOnLastOpen();

    /*
    Method ViewDocument

    method ViewDocument

    */
    inline bool ViewDocument(const QString& bstrDocumentLocation);

    /*
    Method ViewDocument

    method ViewDocument

    */
    inline bool ViewDocument(const QString& bstrDocumentLocation, const QVariant& varProgID);

    /*
    Method ViewDocument2

    method ViewDocument2

    */
    inline bool ViewDocument2(IDispatch* pDisp, const QString& bstrDocumentLocation);

    /*
    Method ViewDocument2

    method ViewDocument2

    */
    inline bool ViewDocument2(IDispatch* pDisp, const QString& bstrDocumentLocation, const QVariant& varProgID);

    /*
    Method ViewDocument3

    method ViewDocument3

    */
    inline bool ViewDocument3(IDispatch* pDisp, const QString& bstrDocumentLocation, int OpenType);

    /*
    Method ViewDocument3

    method ViewDocument3

    */
    inline bool ViewDocument3(IDispatch* pDisp, const QString& bstrDocumentLocation, int OpenType, const QVariant& varProgID);

    /*
    Method ViewInExcel

    method ViewInExcel

    */
    inline void ViewInExcel(const QString& SiteUrl, const QString& fileName, const QString& SessionId, const QString& Cmd, const QString& Sheet, int Row, int Column);

    /*
    Method ViewInExcel

    method ViewInExcel

    */
    inline void ViewInExcel(const QString& SiteUrl, const QString& fileName, const QString& SessionId, const QString& Cmd, const QString& Sheet, int Row, int Column, const QVariant& varProgID);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// Actual coclasses
class ACROPDFLIB_EXPORT AcroPDF : public QAxWidget
{
public:
    AcroPDF(QWidget *parent = 0, Qt::WindowFlags f = 0)
    : QAxWidget(parent, f)
    {
        setControl("{ca8a9780-280d-11cf-a24d-444553540000}");
    }

    AcroPDF(IAcroAXDocShim *iface)
    : QAxWidget()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Property messageHandler

    property messageHandler

    */
    inline QVariant messageHandler() const; //Returns the value of messageHandler
    inline void setMessageHandler(const QVariant& value); //Sets the value of the messageHandler property

    /*
    Property src

    property src

    */
    inline QString src() const; //Returns the value of src
    inline void setSrc(const QString& value); //Sets the value of the src property

    /*
    Method GetVersions

    method GetVersions

    */
    inline QVariant GetVersions();

    /*
    Method LoadFile

    method LoadFile

    */
    inline bool LoadFile(const QString& fileName);

    /*
    Method Print

    method Print

    */
    inline void Print();

    /*
    Method execCommand

    method execCommand

    */
    inline void execCommand(const QVariant& strArray);

    /*
    Method goBackwardStack

    method goBackwardStack

    */
    inline void goBackwardStack();

    /*
    Method goForwardStack

    method goForwardStack

    */
    inline void goForwardStack();

    /*
    Method gotoFirstPage

    method gotoFirstPage

    */
    inline void gotoFirstPage();

    /*
    Method gotoLastPage

    method gotoLastPage

    */
    inline void gotoLastPage();

    /*
    Method gotoNextPage

    method gotoNextPage

    */
    inline void gotoNextPage();

    /*
    Method gotoPreviousPage

    method gotoPreviousPage

    */
    inline void gotoPreviousPage();

    /*
    Method postMessage

    method postMesage

    */
    inline void postMessage(const QVariant& strArray);

    /*
    Method printAll

    method printAll

    */
    inline void printAll();

    /*
    Method printAllFit

    method printAllFit

    */
    inline void printAllFit(bool shrinkToFit);

    /*
    Method printPages

    method printPages

    */
    inline void printPages(int from, int to);

    /*
    Method printPagesFit

    method printPagesFit

    */
    inline void printPagesFit(int from, int to, bool shrinkToFit);

    /*
    Method printWithDialog

    method printWithDialog

    */
    inline void printWithDialog();

    /*
    Method setCurrentHighlight

    method setCurrentHighlight

    */
    inline void setCurrentHighlight(int a, int b, int c, int d);

    /*
    Method setCurrentHightlight

    method setCurrentHightlight

    */
    inline void setCurrentHightlight(int a, int b, int c, int d);

    /*
    Method setCurrentPage

    method setCurrentPage

    */
    inline void setCurrentPage(int n);

    /*
    Method setLayoutMode

    method setLayoutMode

    */
    inline void setLayoutMode(const QString& layoutMode);

    /*
    Method setNamedDest

    method setNamedDest

    */
    inline void setNamedDest(const QString& namedDest);

    /*
    Method setPageMode

    method setPageMode

    */
    inline void setPageMode(const QString& pageMode);

    /*
    Method setShowScrollbars

    method setShowScrollbars

    */
    inline void setShowScrollbars(bool On);

    /*
    Method setShowToolbar

    method setShowToolbar

    */
    inline void setShowToolbar(bool On);

    /*
    Method setView

    method setView

    */
    inline void setView(const QString& viewMode);

    /*
    Method setViewRect

    method setViewRect

    */
    inline void setViewRect(double left, double top, double width, double height);

    /*
    Method setViewScroll

    method setViewScroll

    */
    inline void setViewScroll(const QString& viewMode, double offset);

    /*
    Method setZoom

    method setZoom

    */
    inline void setZoom(double percent);

    /*
    Method setZoomScroll

    method setZoomScroll

    */
    inline void setZoomScroll(double percent, double left, double top);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class ACROPDFLIB_EXPORT AdobeSPOpenDocuments : public QAxObject
{
public:
    AdobeSPOpenDocuments(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{24da047b-40c0-4018-841b-6b7409f730fc}");
    }

    AdobeSPOpenDocuments(ISPOpenDocuments *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Method CheckinDocument

    method CheckinDocument

    */
    inline bool CheckinDocument(const QString& bstrDocumentLocation, int CheckinType, const QString& CheckinComment);

    /*
    Method CheckinDocument

    method CheckinDocument

    */
    inline bool CheckinDocument(const QString& bstrDocumentLocation, int CheckinType, const QString& CheckinComment, bool bKeepCheckout);

    /*
    Method CheckoutDocumentPrompt

    method CheckoutDocumentPrompt

    */
    inline bool CheckoutDocumentPrompt(const QString& bstrDocumentLocationRaw, bool fEditAfterCheckout);

    /*
    Method CheckoutDocumentPrompt

    method CheckoutDocumentPrompt

    */
    inline bool CheckoutDocumentPrompt(const QString& bstrDocumentLocationRaw, bool fEditAfterCheckout, const QVariant& varProgID);

    /*
    Method CreateNewDocument

    method CreateNewDocument

    */
    inline bool CreateNewDocument(const QString& bstrTemplateLocation, const QString& bstrDefaultSaveLocation);

    /*
    Method CreateNewDocument2

    method CreateNewDocument2

    */
    inline bool CreateNewDocument2(IDispatch* pDisp, const QString& bstrTemplateLocation, const QString& bstrDefaultSaveLocation);

    /*
    Method DiscardLocalCheckout

    method DiscardLocalCheckout

    */
    inline bool DiscardLocalCheckout(const QString& bstrDocumentLocationRaw);

    /*
    Method EditDocument

    method EditDocument

    */
    inline bool EditDocument(const QString& bstrDocumentLocation);

    /*
    Method EditDocument

    method EditDocument

    */
    inline bool EditDocument(const QString& bstrDocumentLocation, const QVariant& varProgID);

    /*
    Method EditDocument2

    method EditDocument2

    */
    inline bool EditDocument2(IDispatch* pDisp, const QString& bstrDocumentLocation);

    /*
    Method EditDocument2

    method EditDocument2

    */
    inline bool EditDocument2(IDispatch* pDisp, const QString& bstrDocumentLocation, const QVariant& varProgID);

    /*
    Method EditDocument3

    method EditDocument3

    */
    inline bool EditDocument3(IDispatch* pDisp, const QString& bstrDocumentLocation, bool fUseLocalCopy);

    /*
    Method EditDocument3

    method EditDocument3

    */
    inline bool EditDocument3(IDispatch* pDisp, const QString& bstrDocumentLocation, bool fUseLocalCopy, const QVariant& varProgID);

    /*
    Method NewBlogPost

    method NewBlogPost

    */
    inline void NewBlogPost(const QString& bstrProviderId, const QString& bstrBlogUrl, const QString& bstrBlogName);

    /*
    Method PromptedOnLastOpen

    method PromptedOnLastOpen

    */
    inline bool PromptedOnLastOpen();

    /*
    Method ViewDocument

    method ViewDocument

    */
    inline bool ViewDocument(const QString& bstrDocumentLocation);

    /*
    Method ViewDocument

    method ViewDocument

    */
    inline bool ViewDocument(const QString& bstrDocumentLocation, const QVariant& varProgID);

    /*
    Method ViewDocument2

    method ViewDocument2

    */
    inline bool ViewDocument2(IDispatch* pDisp, const QString& bstrDocumentLocation);

    /*
    Method ViewDocument2

    method ViewDocument2

    */
    inline bool ViewDocument2(IDispatch* pDisp, const QString& bstrDocumentLocation, const QVariant& varProgID);

    /*
    Method ViewDocument3

    method ViewDocument3

    */
    inline bool ViewDocument3(IDispatch* pDisp, const QString& bstrDocumentLocation, int OpenType);

    /*
    Method ViewDocument3

    method ViewDocument3

    */
    inline bool ViewDocument3(IDispatch* pDisp, const QString& bstrDocumentLocation, int OpenType, const QVariant& varProgID);

    /*
    Method ViewInExcel

    method ViewInExcel

    */
    inline void ViewInExcel(const QString& SiteUrl, const QString& fileName, const QString& SessionId, const QString& Cmd, const QString& Sheet, int Row, int Column);

    /*
    Method ViewInExcel

    method ViewInExcel

    */
    inline void ViewInExcel(const QString& SiteUrl, const QString& fileName, const QString& SessionId, const QString& Cmd, const QString& Sheet, int Row, int Column, const QVariant& varProgID);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_ACROPDFLIB_NOINLINES
inline QVariant AcroPDF::messageHandler() const
{
    QVariant qax_result = property("messageHandler");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void AcroPDF::setMessageHandler(const QVariant& value){ setProperty("messageHandler", QVariant(value)); }

inline QString AcroPDF::src() const
{
    QVariant qax_result = property("src");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void AcroPDF::setSrc(const QString& value){ setProperty("src", QVariant(value)); }

inline QVariant AcroPDF::GetVersions()
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline bool AcroPDF::LoadFile(const QString& fileName)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&fileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline void AcroPDF::Print()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline void AcroPDF::execCommand(const QVariant& strArray)
{
    void *_a[] = {0, (void*)&strArray};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
}

inline void AcroPDF::goBackwardStack()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void AcroPDF::goForwardStack()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline void AcroPDF::gotoFirstPage()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
}

inline void AcroPDF::gotoLastPage()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
}

inline void AcroPDF::gotoNextPage()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
}

inline void AcroPDF::gotoPreviousPage()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
}

inline void AcroPDF::postMessage(const QVariant& strArray)
{
    void *_a[] = {0, (void*)&strArray};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
}

inline void AcroPDF::printAll()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
}

inline void AcroPDF::printAllFit(bool shrinkToFit)
{
    void *_a[] = {0, (void*)&shrinkToFit};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
}

inline void AcroPDF::printPages(int from, int to)
{
    void *_a[] = {0, (void*)&from, (void*)&to};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
}

inline void AcroPDF::printPagesFit(int from, int to, bool shrinkToFit)
{
    void *_a[] = {0, (void*)&from, (void*)&to, (void*)&shrinkToFit};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
}

inline void AcroPDF::printWithDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
}

inline void AcroPDF::setCurrentHighlight(int a, int b, int c, int d)
{
    void *_a[] = {0, (void*)&a, (void*)&b, (void*)&c, (void*)&d};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
}

inline void AcroPDF::setCurrentHightlight(int a, int b, int c, int d)
{
    void *_a[] = {0, (void*)&a, (void*)&b, (void*)&c, (void*)&d};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}

inline void AcroPDF::setCurrentPage(int n)
{
    void *_a[] = {0, (void*)&n};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
}

inline void AcroPDF::setLayoutMode(const QString& layoutMode)
{
    void *_a[] = {0, (void*)&layoutMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
}

inline void AcroPDF::setNamedDest(const QString& namedDest)
{
    void *_a[] = {0, (void*)&namedDest};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
}

inline void AcroPDF::setPageMode(const QString& pageMode)
{
    void *_a[] = {0, (void*)&pageMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
}

inline void AcroPDF::setShowScrollbars(bool On)
{
    void *_a[] = {0, (void*)&On};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
}

inline void AcroPDF::setShowToolbar(bool On)
{
    void *_a[] = {0, (void*)&On};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
}

inline void AcroPDF::setView(const QString& viewMode)
{
    void *_a[] = {0, (void*)&viewMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 58, _a);
}

inline void AcroPDF::setViewRect(double left, double top, double width, double height)
{
    void *_a[] = {0, (void*)&left, (void*)&top, (void*)&width, (void*)&height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
}

inline void AcroPDF::setViewScroll(const QString& viewMode, double offset)
{
    void *_a[] = {0, (void*)&viewMode, (void*)&offset};
    qt_metacall(QMetaObject::InvokeMetaMethod, 60, _a);
}

inline void AcroPDF::setZoom(double percent)
{
    void *_a[] = {0, (void*)&percent};
    qt_metacall(QMetaObject::InvokeMetaMethod, 61, _a);
}

inline void AcroPDF::setZoomScroll(double percent, double left, double top)
{
    void *_a[] = {0, (void*)&percent, (void*)&left, (void*)&top};
    qt_metacall(QMetaObject::InvokeMetaMethod, 62, _a);
}


inline QVariant IAcroAXDocShim::messageHandler() const
{
    QVariant qax_result = property("messageHandler");
    Q_ASSERT(qax_result.isValid());
    return *(QVariant*)qax_result.constData();
}
inline void IAcroAXDocShim::setMessageHandler(const QVariant& value){ setProperty("messageHandler", QVariant(value)); }

inline QString IAcroAXDocShim::src() const
{
    QVariant qax_result = property("src");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void IAcroAXDocShim::setSrc(const QString& value){ setProperty("src", QVariant(value)); }

inline QVariant IAcroAXDocShim::GetVersions()
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline bool IAcroAXDocShim::LoadFile(const QString& fileName)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&fileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline void IAcroAXDocShim::Print()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void IAcroAXDocShim::execCommand(const QVariant& strArray)
{
    void *_a[] = {0, (void*)&strArray};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline void IAcroAXDocShim::goBackwardStack()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void IAcroAXDocShim::goForwardStack()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void IAcroAXDocShim::gotoFirstPage()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline void IAcroAXDocShim::gotoLastPage()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
}

inline void IAcroAXDocShim::gotoNextPage()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
}

inline void IAcroAXDocShim::gotoPreviousPage()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
}

inline void IAcroAXDocShim::postMessage(const QVariant& strArray)
{
    void *_a[] = {0, (void*)&strArray};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
}

inline void IAcroAXDocShim::printAll()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
}

inline void IAcroAXDocShim::printAllFit(bool shrinkToFit)
{
    void *_a[] = {0, (void*)&shrinkToFit};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline void IAcroAXDocShim::printPages(int from, int to)
{
    void *_a[] = {0, (void*)&from, (void*)&to};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline void IAcroAXDocShim::printPagesFit(int from, int to, bool shrinkToFit)
{
    void *_a[] = {0, (void*)&from, (void*)&to, (void*)&shrinkToFit};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
}

inline void IAcroAXDocShim::printWithDialog()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
}

inline void IAcroAXDocShim::setCurrentHighlight(int a, int b, int c, int d)
{
    void *_a[] = {0, (void*)&a, (void*)&b, (void*)&c, (void*)&d};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
}

inline void IAcroAXDocShim::setCurrentHightlight(int a, int b, int c, int d)
{
    void *_a[] = {0, (void*)&a, (void*)&b, (void*)&c, (void*)&d};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
}

inline void IAcroAXDocShim::setCurrentPage(int n)
{
    void *_a[] = {0, (void*)&n};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
}

inline void IAcroAXDocShim::setLayoutMode(const QString& layoutMode)
{
    void *_a[] = {0, (void*)&layoutMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
}

inline void IAcroAXDocShim::setNamedDest(const QString& namedDest)
{
    void *_a[] = {0, (void*)&namedDest};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void IAcroAXDocShim::setPageMode(const QString& pageMode)
{
    void *_a[] = {0, (void*)&pageMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}

inline void IAcroAXDocShim::setShowScrollbars(bool On)
{
    void *_a[] = {0, (void*)&On};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline void IAcroAXDocShim::setShowToolbar(bool On)
{
    void *_a[] = {0, (void*)&On};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline void IAcroAXDocShim::setView(const QString& viewMode)
{
    void *_a[] = {0, (void*)&viewMode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}

inline void IAcroAXDocShim::setViewRect(double left, double top, double width, double height)
{
    void *_a[] = {0, (void*)&left, (void*)&top, (void*)&width, (void*)&height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline void IAcroAXDocShim::setViewScroll(const QString& viewMode, double offset)
{
    void *_a[] = {0, (void*)&viewMode, (void*)&offset};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
}

inline void IAcroAXDocShim::setZoom(double percent)
{
    void *_a[] = {0, (void*)&percent};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void IAcroAXDocShim::setZoomScroll(double percent, double left, double top)
{
    void *_a[] = {0, (void*)&percent, (void*)&left, (void*)&top};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}


inline bool AdobeSPOpenDocuments::CheckinDocument(const QString& bstrDocumentLocation, int CheckinType, const QString& CheckinComment)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrDocumentLocation, (void*)&CheckinType, (void*)&CheckinComment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline bool AdobeSPOpenDocuments::CheckinDocument(const QString& bstrDocumentLocation, int CheckinType, const QString& CheckinComment, bool bKeepCheckout)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrDocumentLocation, (void*)&CheckinType, (void*)&CheckinComment, (void*)&bKeepCheckout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline bool AdobeSPOpenDocuments::CheckoutDocumentPrompt(const QString& bstrDocumentLocationRaw, bool fEditAfterCheckout)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrDocumentLocationRaw, (void*)&fEditAfterCheckout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline bool AdobeSPOpenDocuments::CheckoutDocumentPrompt(const QString& bstrDocumentLocationRaw, bool fEditAfterCheckout, const QVariant& varProgID)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrDocumentLocationRaw, (void*)&fEditAfterCheckout, (void*)&varProgID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline bool AdobeSPOpenDocuments::CreateNewDocument(const QString& bstrTemplateLocation, const QString& bstrDefaultSaveLocation)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrTemplateLocation, (void*)&bstrDefaultSaveLocation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline bool AdobeSPOpenDocuments::CreateNewDocument2(IDispatch* pDisp, const QString& bstrTemplateLocation, const QString& bstrDefaultSaveLocation)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pDisp, (void*)&bstrTemplateLocation, (void*)&bstrDefaultSaveLocation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline bool AdobeSPOpenDocuments::DiscardLocalCheckout(const QString& bstrDocumentLocationRaw)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrDocumentLocationRaw};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline bool AdobeSPOpenDocuments::EditDocument(const QString& bstrDocumentLocation)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrDocumentLocation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline bool AdobeSPOpenDocuments::EditDocument(const QString& bstrDocumentLocation, const QVariant& varProgID)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrDocumentLocation, (void*)&varProgID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline bool AdobeSPOpenDocuments::EditDocument2(IDispatch* pDisp, const QString& bstrDocumentLocation)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pDisp, (void*)&bstrDocumentLocation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline bool AdobeSPOpenDocuments::EditDocument2(IDispatch* pDisp, const QString& bstrDocumentLocation, const QVariant& varProgID)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pDisp, (void*)&bstrDocumentLocation, (void*)&varProgID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline bool AdobeSPOpenDocuments::EditDocument3(IDispatch* pDisp, const QString& bstrDocumentLocation, bool fUseLocalCopy)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pDisp, (void*)&bstrDocumentLocation, (void*)&fUseLocalCopy};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline bool AdobeSPOpenDocuments::EditDocument3(IDispatch* pDisp, const QString& bstrDocumentLocation, bool fUseLocalCopy, const QVariant& varProgID)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pDisp, (void*)&bstrDocumentLocation, (void*)&fUseLocalCopy, (void*)&varProgID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline void AdobeSPOpenDocuments::NewBlogPost(const QString& bstrProviderId, const QString& bstrBlogUrl, const QString& bstrBlogName)
{
    void *_a[] = {0, (void*)&bstrProviderId, (void*)&bstrBlogUrl, (void*)&bstrBlogName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline bool AdobeSPOpenDocuments::PromptedOnLastOpen()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline bool AdobeSPOpenDocuments::ViewDocument(const QString& bstrDocumentLocation)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrDocumentLocation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline bool AdobeSPOpenDocuments::ViewDocument(const QString& bstrDocumentLocation, const QVariant& varProgID)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrDocumentLocation, (void*)&varProgID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline bool AdobeSPOpenDocuments::ViewDocument2(IDispatch* pDisp, const QString& bstrDocumentLocation)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pDisp, (void*)&bstrDocumentLocation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline bool AdobeSPOpenDocuments::ViewDocument2(IDispatch* pDisp, const QString& bstrDocumentLocation, const QVariant& varProgID)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pDisp, (void*)&bstrDocumentLocation, (void*)&varProgID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline bool AdobeSPOpenDocuments::ViewDocument3(IDispatch* pDisp, const QString& bstrDocumentLocation, int OpenType)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pDisp, (void*)&bstrDocumentLocation, (void*)&OpenType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline bool AdobeSPOpenDocuments::ViewDocument3(IDispatch* pDisp, const QString& bstrDocumentLocation, int OpenType, const QVariant& varProgID)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pDisp, (void*)&bstrDocumentLocation, (void*)&OpenType, (void*)&varProgID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline void AdobeSPOpenDocuments::ViewInExcel(const QString& SiteUrl, const QString& fileName, const QString& SessionId, const QString& Cmd, const QString& Sheet, int Row, int Column)
{
    void *_a[] = {0, (void*)&SiteUrl, (void*)&fileName, (void*)&SessionId, (void*)&Cmd, (void*)&Sheet, (void*)&Row, (void*)&Column};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void AdobeSPOpenDocuments::ViewInExcel(const QString& SiteUrl, const QString& fileName, const QString& SessionId, const QString& Cmd, const QString& Sheet, int Row, int Column, const QVariant& varProgID)
{
    void *_a[] = {0, (void*)&SiteUrl, (void*)&fileName, (void*)&SessionId, (void*)&Cmd, (void*)&Sheet, (void*)&Row, (void*)&Column, (void*)&varProgID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}


inline bool ISPOpenDocuments::CheckinDocument(const QString& bstrDocumentLocation, int CheckinType, const QString& CheckinComment)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrDocumentLocation, (void*)&CheckinType, (void*)&CheckinComment};
    qt_metacall(QMetaObject::InvokeMetaMethod, 7, _a);
    return qax_result;
}

inline bool ISPOpenDocuments::CheckinDocument(const QString& bstrDocumentLocation, int CheckinType, const QString& CheckinComment, bool bKeepCheckout)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrDocumentLocation, (void*)&CheckinType, (void*)&CheckinComment, (void*)&bKeepCheckout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline bool ISPOpenDocuments::CheckoutDocumentPrompt(const QString& bstrDocumentLocationRaw, bool fEditAfterCheckout)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrDocumentLocationRaw, (void*)&fEditAfterCheckout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline bool ISPOpenDocuments::CheckoutDocumentPrompt(const QString& bstrDocumentLocationRaw, bool fEditAfterCheckout, const QVariant& varProgID)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrDocumentLocationRaw, (void*)&fEditAfterCheckout, (void*)&varProgID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline bool ISPOpenDocuments::CreateNewDocument(const QString& bstrTemplateLocation, const QString& bstrDefaultSaveLocation)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrTemplateLocation, (void*)&bstrDefaultSaveLocation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline bool ISPOpenDocuments::CreateNewDocument2(IDispatch* pDisp, const QString& bstrTemplateLocation, const QString& bstrDefaultSaveLocation)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pDisp, (void*)&bstrTemplateLocation, (void*)&bstrDefaultSaveLocation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline bool ISPOpenDocuments::DiscardLocalCheckout(const QString& bstrDocumentLocationRaw)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrDocumentLocationRaw};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline bool ISPOpenDocuments::EditDocument(const QString& bstrDocumentLocation)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrDocumentLocation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline bool ISPOpenDocuments::EditDocument(const QString& bstrDocumentLocation, const QVariant& varProgID)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrDocumentLocation, (void*)&varProgID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline bool ISPOpenDocuments::EditDocument2(IDispatch* pDisp, const QString& bstrDocumentLocation)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pDisp, (void*)&bstrDocumentLocation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline bool ISPOpenDocuments::EditDocument2(IDispatch* pDisp, const QString& bstrDocumentLocation, const QVariant& varProgID)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pDisp, (void*)&bstrDocumentLocation, (void*)&varProgID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline bool ISPOpenDocuments::EditDocument3(IDispatch* pDisp, const QString& bstrDocumentLocation, bool fUseLocalCopy)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pDisp, (void*)&bstrDocumentLocation, (void*)&fUseLocalCopy};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline bool ISPOpenDocuments::EditDocument3(IDispatch* pDisp, const QString& bstrDocumentLocation, bool fUseLocalCopy, const QVariant& varProgID)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pDisp, (void*)&bstrDocumentLocation, (void*)&fUseLocalCopy, (void*)&varProgID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline void ISPOpenDocuments::NewBlogPost(const QString& bstrProviderId, const QString& bstrBlogUrl, const QString& bstrBlogName)
{
    void *_a[] = {0, (void*)&bstrProviderId, (void*)&bstrBlogUrl, (void*)&bstrBlogName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
}

inline bool ISPOpenDocuments::PromptedOnLastOpen()
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline bool ISPOpenDocuments::ViewDocument(const QString& bstrDocumentLocation)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrDocumentLocation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline bool ISPOpenDocuments::ViewDocument(const QString& bstrDocumentLocation, const QVariant& varProgID)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bstrDocumentLocation, (void*)&varProgID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline bool ISPOpenDocuments::ViewDocument2(IDispatch* pDisp, const QString& bstrDocumentLocation)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pDisp, (void*)&bstrDocumentLocation};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline bool ISPOpenDocuments::ViewDocument2(IDispatch* pDisp, const QString& bstrDocumentLocation, const QVariant& varProgID)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pDisp, (void*)&bstrDocumentLocation, (void*)&varProgID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline bool ISPOpenDocuments::ViewDocument3(IDispatch* pDisp, const QString& bstrDocumentLocation, int OpenType)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pDisp, (void*)&bstrDocumentLocation, (void*)&OpenType};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline bool ISPOpenDocuments::ViewDocument3(IDispatch* pDisp, const QString& bstrDocumentLocation, int OpenType, const QVariant& varProgID)
{
    bool qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pDisp, (void*)&bstrDocumentLocation, (void*)&OpenType, (void*)&varProgID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline void ISPOpenDocuments::ViewInExcel(const QString& SiteUrl, const QString& fileName, const QString& SessionId, const QString& Cmd, const QString& Sheet, int Row, int Column)
{
    void *_a[] = {0, (void*)&SiteUrl, (void*)&fileName, (void*)&SessionId, (void*)&Cmd, (void*)&Sheet, (void*)&Row, (void*)&Column};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
}

inline void ISPOpenDocuments::ViewInExcel(const QString& SiteUrl, const QString& fileName, const QString& SessionId, const QString& Cmd, const QString& Sheet, int Row, int Column, const QVariant& varProgID)
{
    void *_a[] = {0, (void*)&SiteUrl, (void*)&fileName, (void*)&SessionId, (void*)&Cmd, (void*)&Sheet, (void*)&Row, (void*)&Column, (void*)&varProgID};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
}



#endif

}

template<>
inline void *qMetaTypeConstructHelper(const AcroPDFLib::AcroPDF *t)
{ Q_ASSERT(!t); return new AcroPDFLib::AcroPDF; }

template<>
inline void *qMetaTypeConstructHelper(const AcroPDFLib::IAcroAXDocShim *t)
{ Q_ASSERT(!t); return new AcroPDFLib::IAcroAXDocShim; }

template<>
inline void *qMetaTypeConstructHelper(const AcroPDFLib::AdobeSPOpenDocuments *t)
{ Q_ASSERT(!t); return new AcroPDFLib::AdobeSPOpenDocuments; }

template<>
inline void *qMetaTypeConstructHelper(const AcroPDFLib::ISPOpenDocuments *t)
{ Q_ASSERT(!t); return new AcroPDFLib::ISPOpenDocuments; }

#endif

